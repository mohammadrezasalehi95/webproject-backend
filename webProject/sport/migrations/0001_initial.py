# Generated by Django 2.1.5 on 2019-01-27 13:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BasketSeasonDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.CharField(max_length=20)),
                ('twoscoreGoals', models.IntegerField(blank=True, null=True)),
                ('threescoreGoals', models.IntegerField(blank=True, null=True)),
                ('fault', models.IntegerField(blank=True, null=True)),
                ('ribsndhs', models.IntegerField(blank=True, null=True)),
                ('playTime', models.TimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.IntegerField(choices=[(4, 4), (8, 8), (16, 16), (32, 32), (64, 64), (128, 128)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FootBallSeasonDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.CharField(blank=True, max_length=20, null=True)),
                ('goals', models.IntegerField(blank=True, null=True)),
                ('goalPass', models.IntegerField(blank=True, null=True)),
                ('cards', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True)),
                ('status', models.IntegerField(blank=True)),
                ('team1_score', models.IntegerField(blank=True)),
                ('team2_score', models.IntegerField(blank=True)),
                ('team1_point', models.IntegerField(blank=True, default=0)),
                ('team2_point', models.IntegerField(blank=True, default=0)),
                ('type', models.CharField(choices=[('F', 'FootBall'), ('B', 'BasketBall')], max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game_Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(blank=True)),
                ('text', models.TextField(blank=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Game_Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('post', models.CharField(blank=True, max_length=20)),
                ('changingTime', models.CharField(blank=True, max_length=20)),
                ('playTime', models.CharField(blank=True, max_length=20)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Game_Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_report', models.TextField(max_length=500)),
                ('game', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sport.Game')),
            ],
        ),
        migrations.CreateModel(
            name='GameSpecialDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team1', models.IntegerField(blank=True)),
                ('team2', models.IntegerField(blank=True)),
                ('title', models.CharField(max_length=20, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Game')),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(choices=[('F', 'FootBall'), ('B', 'BasketBall')], max_length=1)),
                ('match', models.ManyToManyField(to='sport.Game')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeagueRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finished_game', models.IntegerField(blank=True)),
                ('win', models.IntegerField(blank=True)),
                ('lose', models.IntegerField(blank=True)),
                ('equal', models.IntegerField(blank=True)),
                ('point', models.IntegerField(blank=True)),
                ('gf', models.IntegerField(blank=True)),
                ('ga', models.IntegerField(blank=True)),
                ('league', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sport.League')),
            ],
        ),
        migrations.CreateModel(
            name='New',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=500)),
                ('subtitle', models.TextField(max_length=500)),
                ('content', models.TextField(max_length=2000)),
                ('image', models.ImageField(null=True, upload_to='assets/sport/news')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.IntegerField()),
                ('name', models.CharField(max_length=20)),
                ('bio', models.TextField(max_length=500)),
                ('gender', models.CharField(max_length=5)),
                ('image', models.ImageField(null=True, upload_to='assets/sport/players')),
                ('born', models.DateField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('national', models.CharField(max_length=20, null=True)),
                ('rule', models.CharField(max_length=20, null=True)),
                ('previousClub', models.CharField(max_length=20, null=True)),
                ('squad', models.CharField(max_length=20, null=True)),
                ('type', models.CharField(choices=[('F', 'FootBall'), ('B', 'BasketBall')], max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('bio', models.TextField(max_length=500)),
                ('image', models.ImageField(default='default_team.jpg', null=True, upload_to='assets/sport/team')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='currentTeam',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sport.Team'),
        ),
        migrations.AddField(
            model_name='leaguerow',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sport.Team'),
        ),
        migrations.AddField(
            model_name='game_player',
            name='pid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sport.Profile'),
        ),
        migrations.AddField(
            model_name='game',
            name='bestPlayer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sport.Profile'),
        ),
        migrations.AddField(
            model_name='game',
            name='team1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home', to='sport.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='team2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guest', to='sport.Team'),
        ),
        migrations.AddField(
            model_name='footballseasondetail',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Profile'),
        ),
        migrations.AddField(
            model_name='cup',
            name='match',
            field=models.ManyToManyField(to='sport.Game'),
        ),
        migrations.AddField(
            model_name='basketseasondetail',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Profile'),
        ),
    ]
